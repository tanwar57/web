# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

parameters:
- name: app_in_dev
  displayName: Application in Development Environment
  type: string
  default: 
  values:
  - webapptes57-dev
  - myapptest7-dev
  - fiftechapp-dev
  - myapplicatointest7-dev
  - fiftechappreact-dev

- name: apps_in_test
  displayName: Application in Test Environment
  type: string
  default:
  values:
  - webapptest57-test
  - myapptest27-test
  - fiftechapp-test
  - myappteststage27-test
  - fiftechappstage-test

- name: apps_in_prod
  displayName: Application in Production Environment
  type: string
  default:
  values:
  - webapptest57-prod
  - myapptest27-prod
  - fiftechapp-prod
  - myapptestprod27-prod
  - fiftechappproduction-prod
- name: build_choose
  displayName: Choose Specific build
  type: string
  default: latest
  values:
  - specific
  - current

trigger:
- master
stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'windows-latest'

    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'

    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    
- stage: Development_Environment
  dependsOn: Build
  condition: succeeded('Build')
  jobs:
  - deployment: Deploy_to_Dev
    pool:
      vmImage: 'windows-latest'
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: ${{ parameters.build_choose }}
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'


- stage: Staging_Environment
  dependsOn: Build
  condition: succeeded('Build')
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'windows-latest'
    environment: 'test'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Microsoft Partner Network (e189eff3-24f5-4964-87fc-1474f1735e7e)'
              appType: 'webApp'
              WebAppName: ${{ parameters.apps_in_test }}
              packageForLinux: '$(System.ArtifactsDirectory)/drop/*.zip'
            
- stage: Production_Environment
  dependsOn: Build
  condition: succeeded('Build')
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'windows-latest'
    environment: 'prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Microsoft Partner Network (e189eff3-24f5-4964-87fc-1474f1735e7e)'
              appType: 'webApp'
              WebAppName: ${{ parameters.apps_in_prod }}
              packageForLinux: '$(System.ArtifactsDirectory)/drop/*.zip'